Aqui é um modelo de um arquivo .robot para rodar 30x
e cada um ele salva o arquivo em um txt diferente em um sciptp .ps1:

# O arquivo .robot fica assim:

*** Settings ***
Documentation    Fluxo feliz - Cadastro de Pregão Eletrônico
Library          SeleniumLibrary
Library          OperatingSystem

*** Variables ***
${EXECDIR}    ${CURDIR}

*** Test Cases ***
CT01 - Criar Pregão - Aba Dados Gerais
    # Clique no botão 'Salvar'
    Wait Until Element Is Visible    //input[@name='btnSalvar']
    Click Element    //input[@name='btnSalvar']
    Sleep    2

    # Capturar o valor do campo depois que ele for preenchido
    ${NUM_PROC_PREGAO}    SeleniumLibrary.Get Text    ${INPUT_NUM_PROC_PREGAO}

    # Recuperar número da iteração (passado pelo script .ps1)
    ${ITERACAO}    Set Variable    ${arg_iteration}

    # Salvar o valor em um arquivo de texto único
    ${ARQUIVO}    Set Variable    ${EXECDIR}/test/processos/num_proc_pregao_${ITERACAO}.txt
    Create File    ${ARQUIVO}    ${NUM_PROC_PREGAO}
    Log    Salvo no arquivo: ${ARQUIVO}

# Explicação:
    Set Variable ${arg_iteration}: Essa variável será passada pelo script PowerShell.
    num_proc_pregao_${ITERACAO}.txt: Garante que o nome do arquivo muda em cada iteração 
    (exemplo: num_proc_pregao_1.txt, num_proc_pregao_2.txt).




# O arquivo .ps1 fica assim:

$EXECDIR = (Get-Location).Path  # Definindo o diretório atual
$robotTest = "$EXECDIR/test/caminhoDoArquivoRobot.robot"

For ($i = 1; $i -le 30; $i++) {
    Write-Host "Executando a suíte pela $iª vez"

    # Executar Robot Framework e passar a iteração como variável
    robot --variable arg_iteration:$i -d ./logs_$i $robotTest
}


# Explicação do Script:
--variable arg_iteration:$i: Passa o número da iteração atual para o arquivo Robot Framework.
-d ./logs_$i: Cria pastas de log separadas para cada execução.


# Resultado Esperado:
Durante cada execução, o número do pregão será salvo em um arquivo separado:

num_proc_pregao_1.txt
num_proc_pregao_2.txt
...
num_proc_pregao_30.txt

# Cada execução também terá seus próprios logs:

logs_1
logs_2
...
logs_30

# Isso garante que os 30 registros sejam organizados e que você possa reutilizar os valores salvos.





